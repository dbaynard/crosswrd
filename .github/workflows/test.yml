name: Build and Test
on: [pull_request]
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    environment: netlify
    strategy:
      matrix:
        node-version: [16]
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Setup Node.js ${{ matrix.node-version }}.x
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          check-latest: true

      - name: Cache ~/.pnpm-store
        uses: actions/cache@v3
        env:
          cache-name: cache-pnpm-store
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ matrix.node-version }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-${{ matrix.node-version }}-build-
            ${{ runner.os }}-

      - uses: pnpm/action-setup@11dd14d0c0916e1ad9ff1938d8d4ea509bebfe10
        with:
          version: 8.1.1
          run_install: |
            - recursive: true
              args: [--frozen-lockfile]

      - name: Build üîß
        env:
          REACT_APP_SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          REACT_APP_DEPLOY_SHA: ${{ github.event.pull_request.head.sha }}
          REACT_APP_CONTEXT: deploy-preview
        run: |
          pnpm -C crosswrd-app run build

      - name: Test üå°
        run: |
          pnpm -C crosswrd-app run test

      - name: Deploy to Netlify üöÄ
        id: netlify-deploy
        run: |
          pnpm add -g netlify
          bash "${GITHUB_WORKSPACE}/.github/netlify.sh" deploy \
            --message="Merge of ${HEAD_REF##*/} (${HEAD_SHA})" \
            --dir=crosswrd-app/build
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          HEAD_REF: ${{ github.head_ref }}
          HEAD_SHA: ${{ github.event.pull_request.head.sha }}

      - uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'üìü Preview deployed to ${{ steps.netlify-deploy.outputs.NETLIFY_URL }}'
            })

      - name: Upload build artifact üïµ
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: crosswrd-app/build
